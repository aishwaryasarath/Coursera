cd scripts/
touch auto-update.py (touch creates a file with no content?)
touch gather-information.sh
ls -l
git add auto-update.py
git commit -m 'Add two new scripts'

-- we forgot to add the other file

git add gather-information.sh
git commit --amend (overwrites previous commit)


Add two new scripts
gather-information.sh will be used to collect inforamtion in case of errors
auto-update.py will be run daily to update computers automatically

escape shift z shift z

try not to do this in public repositories, it is recommended only for local
commits


Rollbacks
--------
git revert
ie reverts the changes added in the bad commit and creates a new commit
to test this lets do this
    if disk_full():
        print("Disk Full.")
        sys.exit(1)
git commit -a -m 'Add call to disk_full function'

users start getting error coz of faulty code
so we check
./all_checks.py

so now we revert
git revert HEAD
add a detailed comment

git -p -2 to check last two entries of log

what if we need to revert a previous commit
--------------
cd checks
git log -1

the long commit id is a hash generated by a cryptographic algorithm called SHA1
SHA1 takes a bunch of data as input(all info related to commit) and creates a
40 char str as output
to ensure consistency
chance of two different commit to produce same hash, ie collision, is extremely
 small

 Each time we amend a commit, the commit ID will change. This is why it's important not to use dash dash amend on commits that have been made public.
Start transcript at 3 minutes 17 seconds3:17
The data integrity offered by the commit ID means that if a bad disk or network link corrupt some data in your repository, or worse, if someone intentionally corrupt some data, Git can use the hash to spot that corruption


git log -2
git show b3092fceae8e74239d727e2e49897c12366d336d
alternatively you can give
git show b3092fce  as long as there is only one possibility

git revert b3092fceae8e74239d727e2e49897c12366d336d

git show
